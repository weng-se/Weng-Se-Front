{"ast":null,"code":"import _classCallCheck from \"/Users/MouhcinePRO/Desktop/Weng Se New/Weng-Se-Front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/MouhcinePRO/Desktop/Weng Se New/Weng-Se-Front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/MouhcinePRO/Desktop/Weng Se New/Weng-Se-Front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/MouhcinePRO/Desktop/Weng Se New/Weng-Se-Front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/MouhcinePRO/Desktop/Weng Se New/Weng-Se-Front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/MouhcinePRO/Desktop/Weng Se New/Weng-Se-Front/src/containers/SideNav/index.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport Drawer from '@material-ui/core/Drawer';\nimport SidenavContent from './SidenavContent';\nimport UserInfo from 'components/UserInfo';\nimport { COLLAPSED_DRAWER, FIXED_DRAWER, HORIZONTAL_NAVIGATION } from 'constants/ActionTypes';\nimport { toggleCollapsedNav, updateWindowWidth } from 'actions/Setting';\n\nvar SideNav =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(SideNav, _React$PureComponent);\n\n  function SideNav() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SideNav);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SideNav)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.onToggleCollapsedNav = function (e) {\n      var val = !_this.props.navCollapsed;\n\n      _this.props.toggleCollapsedNav(val);\n    };\n\n    return _this;\n  }\n\n  _createClass(SideNav, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      window.addEventListener('resize', function () {\n        _this2.props.updateWindowWidth(window.innerWidth);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          navCollapsed = _this$props.navCollapsed,\n          drawerType = _this$props.drawerType,\n          width = _this$props.width,\n          navigationStyle = _this$props.navigationStyle;\n      var drawerStyle = drawerType.includes(FIXED_DRAWER) ? 'd-xl-flex' : drawerType.includes(COLLAPSED_DRAWER) ? '' : 'd-flex';\n      var type = 'permanent';\n\n      if (drawerType.includes(COLLAPSED_DRAWER) || drawerType.includes(FIXED_DRAWER) && width < 1200) {\n        type = 'temporary';\n      }\n\n      if (navigationStyle === HORIZONTAL_NAVIGATION) {\n        drawerStyle = '';\n        type = 'temporary';\n      }\n\n      return React.createElement(\"div\", {\n        className: \"app-sidebar d-none \".concat(drawerStyle),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(Drawer, {\n        className: \"app-sidebar-content\",\n        variant: type,\n        open: type.includes('temporary') ? navCollapsed : true,\n        onClose: this.onToggleCollapsedNav,\n        classes: {\n          paper: 'side-nav'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(UserInfo, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }), React.createElement(SidenavContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return SideNav;\n}(React.PureComponent);\n\nvar mapStateToProps = function mapStateToProps(_ref) {\n  var settings = _ref.settings;\n  var navCollapsed = settings.navCollapsed,\n      drawerType = settings.drawerType,\n      width = settings.width,\n      navigationStyle = settings.navigationStyle;\n  return {\n    navCollapsed: navCollapsed,\n    drawerType: drawerType,\n    width: width,\n    navigationStyle: navigationStyle\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, {\n  toggleCollapsedNav: toggleCollapsedNav,\n  updateWindowWidth: updateWindowWidth\n})(SideNav));","map":{"version":3,"sources":["/Users/MouhcinePRO/Desktop/Weng Se New/Weng-Se-Front/src/containers/SideNav/index.js"],"names":["React","connect","withRouter","Drawer","SidenavContent","UserInfo","COLLAPSED_DRAWER","FIXED_DRAWER","HORIZONTAL_NAVIGATION","toggleCollapsedNav","updateWindowWidth","SideNav","onToggleCollapsedNav","e","val","props","navCollapsed","window","addEventListener","innerWidth","drawerType","width","navigationStyle","drawerStyle","includes","type","paper","PureComponent","mapStateToProps","settings"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {withRouter} from 'react-router-dom';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport SidenavContent from './SidenavContent';\r\nimport UserInfo from 'components/UserInfo';\r\nimport {COLLAPSED_DRAWER, FIXED_DRAWER, HORIZONTAL_NAVIGATION} from 'constants/ActionTypes';\r\nimport {toggleCollapsedNav, updateWindowWidth} from 'actions/Setting';\r\n\r\nclass SideNav extends React.PureComponent {\r\n\r\n  onToggleCollapsedNav = (e) => {\r\n    const val = !this.props.navCollapsed;\r\n    this.props.toggleCollapsedNav(val);\r\n  };\r\n\r\n  componentDidMount() {\r\n    window.addEventListener('resize', () => {\r\n      this.props.updateWindowWidth(window.innerWidth)\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {navCollapsed, drawerType, width, navigationStyle} = this.props;\r\n    let drawerStyle = drawerType.includes(FIXED_DRAWER) ? 'd-xl-flex' : drawerType.includes(COLLAPSED_DRAWER) ? '' : 'd-flex';\r\n    let type = 'permanent';\r\n    if (drawerType.includes(COLLAPSED_DRAWER) || (drawerType.includes(FIXED_DRAWER) && width < 1200)) {\r\n      type = 'temporary';\r\n    }\r\n\r\n    if (navigationStyle === HORIZONTAL_NAVIGATION) {\r\n      drawerStyle = '';\r\n      type = 'temporary';\r\n    }\r\n    return (\r\n      <div className={`app-sidebar d-none ${drawerStyle}`}>\r\n        <Drawer className=\"app-sidebar-content\"\r\n                variant={type}\r\n                open={type.includes('temporary') ? navCollapsed : true}\r\n                onClose={this.onToggleCollapsedNav}\r\n                classes={{\r\n                  paper: 'side-nav',\r\n                }}\r\n        >\r\n          <UserInfo/>\r\n          <SidenavContent/>\r\n        </Drawer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({settings}) => {\r\n  const {navCollapsed, drawerType, width, navigationStyle} = settings;\r\n  return {navCollapsed, drawerType, width, navigationStyle}\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, {toggleCollapsedNav, updateWindowWidth})(SideNav));\r\n\r\n"]},"metadata":{},"sourceType":"module"}