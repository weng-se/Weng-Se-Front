{"ast":null,"code":"import _regeneratorRuntime from \"/Users/MouhcinePRO/Desktop/Weng Se New/Weng-Se-Front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(getUsers),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchFetchUsers),\n    _marked3 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(createUser),\n    _marked4 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchCreateUser),\n    _marked5 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(rootSaga);\n\nimport { all, call, put, fork, takeLatest } from \"redux-saga/effects\";\nimport { REQUEST_FETCH_USERS, REQUEST_PROGRESS_USERS, REQUEST_SUCCESS_USERS, REQUEST_FAILURE_USERS, REQUEST_PROGRESS_CREATE_USER, REQUEST_SUCCESS_CREATE_USER, REQUEST_FAILURE_CREATE_USER, REQUEST_CREATE_USER } from \"../actions/Users\";\nimport axios from 'axios';\n\nfunction getUsers(data) {\n  var payload, error;\n  return _regeneratorRuntime.wrap(function getUsers$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          payload = null, error = null;\n          _context.prev = 1;\n          _context.next = 4;\n          return put({\n            type: REQUEST_PROGRESS_USERS,\n            progress: 0\n          });\n\n        case 4:\n          _context.next = 6;\n          return axios.get('http://localhost:4000/api/Users', {}).then(function (res) {\n            if (res.status == 200) payload = res.data;\n          }).catch(function (error) {\n            error = error;\n          });\n\n        case 6:\n          if (!payload) {\n            _context.next = 11;\n            break;\n          }\n\n          _context.next = 9;\n          return put({\n            type: REQUEST_SUCCESS_USERS,\n            payload: payload,\n            progress: 100\n          });\n\n        case 9:\n          _context.next = 13;\n          break;\n\n        case 11:\n          _context.next = 13;\n          return put({\n            type: REQUEST_FAILURE_USERS,\n            error: error,\n            progress: 100\n          });\n\n        case 13:\n          _context.next = 19;\n          break;\n\n        case 15:\n          _context.prev = 15;\n          _context.t0 = _context[\"catch\"](1);\n          _context.next = 19;\n          return put({\n            type: REQUEST_FAILURE_USERS,\n            error: _context.t0,\n            progress: 100\n          });\n\n        case 19:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[1, 15]]);\n}\n\nexport function watchFetchUsers() {\n  return _regeneratorRuntime.wrap(function watchFetchUsers$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeLatest(REQUEST_FETCH_USERS, getUsers);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\n/**\n * add new user\n */\n\nfunction createUser(data) {\n  var payload, error;\n  return _regeneratorRuntime.wrap(function createUser$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          payload = null, error = null;\n          _context3.prev = 1;\n          _context3.next = 4;\n          return put({\n            type: REQUEST_PROGRESS_CREATE_USER,\n            progress: 0\n          });\n\n        case 4:\n          _context3.next = 6;\n          return axios.post('http://localhost:4000/api/Users', data.formData).then(function (res) {\n            if (res.status == 200) payload = res.data;\n          }).catch(function (error) {\n            error = error;\n          });\n\n        case 6:\n          if (!payload) {\n            _context3.next = 11;\n            break;\n          }\n\n          _context3.next = 9;\n          return put({\n            type: REQUEST_SUCCESS_CREATE_USER,\n            payload: payload,\n            progress: 100\n          });\n\n        case 9:\n          _context3.next = 13;\n          break;\n\n        case 11:\n          _context3.next = 13;\n          return put({\n            type: REQUEST_FAILURE_CREATE_USER,\n            error: error,\n            progress: 100\n          });\n\n        case 13:\n          _context3.next = 19;\n          break;\n\n        case 15:\n          _context3.prev = 15;\n          _context3.t0 = _context3[\"catch\"](1);\n          _context3.next = 19;\n          return put({\n            type: REQUEST_FAILURE_CREATE_USER,\n            error: _context3.t0,\n            progress: 100\n          });\n\n        case 19:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[1, 15]]);\n}\n\nexport function watchCreateUser() {\n  return _regeneratorRuntime.wrap(function watchCreateUser$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return takeLatest(REQUEST_CREATE_USER, createUser);\n\n        case 2:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4);\n}\n/**\n * edit new user\n */\n\nexport default function rootSaga() {\n  return _regeneratorRuntime.wrap(function rootSaga$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.next = 2;\n          return all([fork(watchFetchUsers), fork(watchCreateUser)]);\n\n        case 2:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5);\n}","map":{"version":3,"sources":["/Users/MouhcinePRO/Desktop/Weng Se New/Weng-Se-Front/src/sagas/Users.js"],"names":["getUsers","watchFetchUsers","createUser","watchCreateUser","rootSaga","all","call","put","fork","takeLatest","REQUEST_FETCH_USERS","REQUEST_PROGRESS_USERS","REQUEST_SUCCESS_USERS","REQUEST_FAILURE_USERS","REQUEST_PROGRESS_CREATE_USER","REQUEST_SUCCESS_CREATE_USER","REQUEST_FAILURE_CREATE_USER","REQUEST_CREATE_USER","axios","data","payload","error","type","progress","get","then","res","status","catch","post","formData"],"mappings":"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","sourcesContent":["import {\n    all,\n    call,\n    put,\n    fork,\n    takeLatest\n} from \"redux-saga/effects\";\nimport {\n    REQUEST_FETCH_USERS,\n    REQUEST_PROGRESS_USERS,\n    REQUEST_SUCCESS_USERS,\n    REQUEST_FAILURE_USERS,\n    REQUEST_PROGRESS_CREATE_USER,\n    REQUEST_SUCCESS_CREATE_USER,\n    REQUEST_FAILURE_CREATE_USER,\n    REQUEST_CREATE_USER,\n} from \"../actions/Users\";\nimport axios from 'axios';\n\n\n\nfunction* getUsers(data) {\n    let payload = null,\n        error = null;\n    try {\n        yield put({\n            type: REQUEST_PROGRESS_USERS,\n            progress: 0\n        });\n        yield axios.get('http://localhost:4000/api/Users', {\n                // mode: 'cors',\n                // credentials: 'include'\n            })\n            .then(function (res) {\n                if (res.status == 200) payload = res.data\n            }).catch(function (error) {\n                error = error\n            });\n\n        if (payload) yield put({\n            type: REQUEST_SUCCESS_USERS,\n            payload: payload,\n            progress: 100\n        });\n        else yield put({\n            type: REQUEST_FAILURE_USERS,\n            error: error,\n            progress: 100\n        });\n\n    } catch (error) {\n        yield put({\n            type: REQUEST_FAILURE_USERS,\n            error: error,\n            progress: 100\n        });\n    }\n}\nexport function* watchFetchUsers() {\n    yield takeLatest(REQUEST_FETCH_USERS, getUsers);\n}\n\n\n/**\n * add new user\n */\n\n\nfunction* createUser(data) {\n    let payload = null,\n        error = null;\n    try {\n        yield put({\n            type: REQUEST_PROGRESS_CREATE_USER,\n            progress: 0\n        });\n        yield axios.post('http://localhost:4000/api/Users', data.formData)\n            .then(function (res) {\n                if (res.status == 200) payload = res.data\n            }).catch(function (error) {\n                error = error\n            });\n\n        if (payload) yield put({\n            type: REQUEST_SUCCESS_CREATE_USER,\n            payload: payload,\n            progress: 100\n        });\n        else yield put({\n            type: REQUEST_FAILURE_CREATE_USER,\n            error: error,\n            progress: 100\n        });\n\n    } catch (error) {\n        yield put({\n            type: REQUEST_FAILURE_CREATE_USER,\n            error: error,\n            progress: 100\n        });\n    }\n}\nexport function* watchCreateUser() {\n    yield takeLatest(REQUEST_CREATE_USER, createUser);\n}\n\n\n\n\n/**\n * edit new user\n */\n\n\n\n\n\nexport default function* rootSaga() {\n    yield all([\n        fork(watchFetchUsers),\n        fork(watchCreateUser)\n    ]);\n}"]},"metadata":{},"sourceType":"module"}