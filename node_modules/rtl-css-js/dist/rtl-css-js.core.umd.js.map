{"version":3,"file":"rtl-css-js.core.umd.js","sources":["../src/internal/utils.js","../src/internal/property-value-converters.js"],"sourcesContent":["/**\n * Takes an array of [keyValue1, keyValue2] pairs and creates an object of {keyValue1: keyValue2, keyValue2: keyValue1}\n * @param {Array} array the array of pairs\n * @return {Object} the {key, value} pair object\n */\nfunction arrayToObject(array) {\n  return array.reduce((obj, [prop1, prop2]) => {\n    obj[prop1] = prop2\n    obj[prop2] = prop1\n    return obj\n  }, {})\n}\n\nfunction isBoolean(val) {\n  return typeof val === 'boolean'\n}\n\nfunction isNumber(val) {\n  return typeof val === 'number'\n}\n\nfunction isNullOrUndefined(val) {\n  return val === null || typeof val === 'undefined'\n}\n\nfunction isObject(val) {\n  return val && typeof val === 'object'\n}\n\nfunction isString(val) {\n  return typeof val === 'string'\n}\n\nfunction includes(inclusive, inclusee) {\n  return inclusive.indexOf(inclusee) !== -1\n}\n\n/**\n * Flip the sign of a CSS value, possibly with a unit.\n *\n * We can't just negate the value with unary minus due to the units.\n *\n * @private\n * @param {String} value - the original value (for example 77%)\n * @return {String} the result (for example -77%)\n */\nfunction flipSign(value) {\n  if (parseFloat(value) === 0) {\n    // Don't mangle zeroes\n    return value\n  }\n\n  if (value[0] === '-') {\n    return value.slice(1)\n  }\n\n  return `-${value}`\n}\n\nfunction flipTransformSign(match, prefix, offset, suffix) {\n  return prefix + flipSign(offset) + suffix\n}\n\n/**\n * Takes a percentage for background position and inverts it.\n * This was copied and modified from CSSJanus:\n * https://github.com/cssjanus/cssjanus/blob/4245f834365f6cfb0239191a151432fb85abab23/src/cssjanus.js#L152-L175\n * @param {String} value - the original value (for example 77%)\n * @return {String} the result (for example 23%)\n */\nfunction calculateNewBackgroundPosition(value) {\n  const idx = value.indexOf('.')\n  if (idx === -1) {\n    value = `${100 - parseFloat(value)}%`\n  } else {\n    // Two off, one for the \"%\" at the end, one for the dot itself\n    const len = value.length - idx - 2\n    value = 100 - parseFloat(value)\n    value = `${value.toFixed(len)}%`\n  }\n  return value\n}\n\n/**\n * This takes a list of CSS values and converts it to an array\n * @param {String} value - something like `1px`, `1px 2em`, or `3pt rgb(150, 230, 550) 40px calc(100% - 5px)`\n * @return {Array} the split values (for example: `['3pt', 'rgb(150, 230, 550)', '40px', 'calc(100% - 5px)']`)\n */\nfunction getValuesAsList(value) {\n  return (\n    value\n      .replace(/ +/g, ' ') // remove all extraneous spaces\n      .split(' ')\n      .map(i => i.trim()) // get rid of extra space before/after each item\n      .filter(Boolean) // get rid of empty strings\n      // join items which are within parenthese\n      // luckily `calc (100% - 5px)` is invalid syntax and it must be `calc(100% - 5px)`, otherwise this would be even more complex\n      .reduce(\n        ({list, state}, item) => {\n          const openParansCount = (item.match(/\\(/g) || []).length\n          const closedParansCount = (item.match(/\\)/g) || []).length\n          if (state.parensDepth > 0) {\n            list[list.length - 1] = `${list[list.length - 1]} ${item}`\n          } else {\n            list.push(item)\n          }\n          state.parensDepth += openParansCount - closedParansCount\n          return {list, state}\n        },\n        {list: [], state: {parensDepth: 0}},\n      ).list\n  )\n}\n\n/**\n * This is intended for properties that are `top right bottom left` and will switch them to `top left bottom right`\n * @param {String} value - `1px 2px 3px 4px` for example, but also handles cases where there are too few/too many and\n * simply returns the value in those cases (which is the correct behavior)\n * @return {String} the result - `1px 4px 3px 2px` for example.\n */\nfunction handleQuartetValues(value) {\n  const splitValues = getValuesAsList(value)\n  if (splitValues.length <= 3 || splitValues.length > 4) {\n    return value\n  }\n  const [top, right, bottom, left] = splitValues\n  return [top, left, bottom, right].join(' ')\n}\n\nexport {\n  arrayToObject,\n  calculateNewBackgroundPosition,\n  flipTransformSign as calculateNewTranslate,\n  flipTransformSign,\n  flipSign,\n  handleQuartetValues,\n  includes,\n  isBoolean,\n  isNullOrUndefined,\n  isNumber,\n  isObject,\n  isString,\n  getValuesAsList,\n}\n","import {\n  includes,\n  isNumber,\n  calculateNewBackgroundPosition,\n  flipTransformSign,\n  handleQuartetValues,\n  getValuesAsList,\n} from './utils'\n\n// some values require a little fudging, that fudging goes here.\nconst propertyValueConverters = {\n  padding({value}) {\n    if (isNumber(value)) {\n      return value\n    }\n    return handleQuartetValues(value)\n  },\n  textShadow({value}) {\n    // intentionally leaving off the `g` flag here because we only want to change the first number (which is the offset-x)\n    return value.replace(/(-*)([.|\\d]+)/, (match, negative, number) => {\n      if (number === '0') {\n        return match\n      }\n      const doubleNegative = negative === '' ? '-' : ''\n      return `${doubleNegative}${number}`\n    })\n  },\n  borderColor({value}) {\n    return handleQuartetValues(value)\n  },\n  borderRadius({value}) {\n    if (isNumber(value)) {\n      return value\n    }\n    if (includes(value, '/')) {\n      const [radius1, radius2] = value.split('/')\n      const convertedRadius1 = propertyValueConverters.borderRadius({\n        value: radius1.trim(),\n      })\n      const convertedRadius2 = propertyValueConverters.borderRadius({\n        value: radius2.trim(),\n      })\n      return `${convertedRadius1} / ${convertedRadius2}`\n    }\n    const splitValues = getValuesAsList(value)\n    switch (splitValues.length) {\n      case 2: {\n        return splitValues.reverse().join(' ')\n      }\n      case 4: {\n        const [topLeft, topRight, bottomRight, bottomLeft] = splitValues\n        return [topRight, topLeft, bottomLeft, bottomRight].join(' ')\n      }\n      default: {\n        return value\n      }\n    }\n  },\n  background({\n    value,\n    valuesToConvert,\n    isRtl,\n    bgImgDirectionRegex,\n    bgPosDirectionRegex,\n  }) {\n    // Yeah, this is in need of a refactor 🙃...\n    // but this property is a tough cookie 🍪\n    // get the backgroundPosition out of the string by removing everything that couldn't be the backgroundPosition value\n    const backgroundPositionValue = value\n      .replace(\n        /(url\\(.*?\\))|(rgba?\\(.*?\\))|(hsl\\(.*?\\))|(#[a-fA-F0-9]+)|((^| )(\\D)+( |$))/g,\n        '',\n      )\n      .trim()\n    // replace that backgroundPosition value with the converted version\n    value = value.replace(\n      backgroundPositionValue,\n      propertyValueConverters.backgroundPosition({\n        value: backgroundPositionValue,\n        valuesToConvert,\n        isRtl,\n        bgPosDirectionRegex,\n      }),\n    )\n    // do the backgroundImage value replacing on the whole value (because why not?)\n    return propertyValueConverters.backgroundImage({\n      value,\n      valuesToConvert,\n      bgImgDirectionRegex,\n    })\n  },\n  backgroundImage({value, valuesToConvert, bgImgDirectionRegex}) {\n    if (!includes(value, 'url(') && !includes(value, 'linear-gradient(')) {\n      return value\n    }\n    return value.replace(bgImgDirectionRegex, (match, g1, group2) => {\n      return match.replace(group2, valuesToConvert[group2])\n    })\n  },\n  backgroundPosition({value, valuesToConvert, isRtl, bgPosDirectionRegex}) {\n    return (\n      value\n        // intentionally only grabbing the first instance of this because that represents `left`\n        .replace(isRtl ? /^((-|\\d|\\.)+%)/ : null, (match, group) =>\n          calculateNewBackgroundPosition(group),\n        )\n        .replace(bgPosDirectionRegex, match => valuesToConvert[match])\n    )\n  },\n  backgroundPositionX({value, valuesToConvert, isRtl, bgPosDirectionRegex}) {\n    if (isNumber(value)) {\n      return value\n    }\n    return propertyValueConverters.backgroundPosition({\n      value,\n      valuesToConvert,\n      isRtl,\n      bgPosDirectionRegex,\n    })\n  },\n  transform({value}) {\n    // This was copied and modified from CSSJanus:\n    // https://github.com/cssjanus/cssjanus/blob/4a40f001b1ba35567112d8b8e1d9d95eda4234c3/src/cssjanus.js#L152-L153\n    const nonAsciiPattern = '[^\\\\u0020-\\\\u007e]'\n    const unicodePattern = '(?:(?:\\\\[0-9a-f]{1,6})(?:\\\\r\\\\n|\\\\s)?)'\n    const numPattern = '(?:[0-9]*\\\\.[0-9]+|[0-9]+)'\n    const unitPattern = '(?:em|ex|px|cm|mm|in|pt|pc|deg|rad|grad|ms|s|hz|khz|%)'\n    const escapePattern = `(?:${unicodePattern}|\\\\\\\\[^\\\\r\\\\n\\\\f0-9a-f])`\n    const nmstartPattern = `(?:[_a-z]|${nonAsciiPattern}|${escapePattern})`\n    const nmcharPattern = `(?:[_a-z0-9-]|${nonAsciiPattern}|${escapePattern})`\n    const identPattern = `-?${nmstartPattern}${nmcharPattern}*`\n    const quantPattern = `${numPattern}(?:\\\\s*${unitPattern}|${identPattern})?`\n    const signedQuantPattern = `((?:-?${quantPattern})|(?:inherit|auto))`\n    const translateXRegExp = new RegExp(\n      `(translateX\\\\s*\\\\(\\\\s*)${signedQuantPattern}(\\\\s*\\\\))`,\n      'gi',\n    )\n    const translateRegExp = new RegExp(\n      `(translate\\\\s*\\\\(\\\\s*)${signedQuantPattern}((?:\\\\s*,\\\\s*${signedQuantPattern}){0,1}\\\\s*\\\\))`,\n      'gi',\n    )\n    const translate3dRegExp = new RegExp(\n      `(translate3d\\\\s*\\\\(\\\\s*)${signedQuantPattern}((?:\\\\s*,\\\\s*${signedQuantPattern}){0,2}\\\\s*\\\\))`,\n      'gi',\n    )\n    const rotateRegExp = new RegExp(\n      `(rotate[ZY]?\\\\s*\\\\(\\\\s*)${signedQuantPattern}(\\\\s*\\\\))`,\n      'gi',\n    )\n    return value\n      .replace(translateXRegExp, flipTransformSign)\n      .replace(translateRegExp, flipTransformSign)\n      .replace(translate3dRegExp, flipTransformSign)\n      .replace(rotateRegExp, flipTransformSign)\n  },\n}\n\npropertyValueConverters.margin = propertyValueConverters.padding\npropertyValueConverters.borderWidth = propertyValueConverters.padding\npropertyValueConverters.boxShadow = propertyValueConverters.textShadow\npropertyValueConverters.webkitBoxShadow = propertyValueConverters.boxShadow\npropertyValueConverters.mozBoxShadow = propertyValueConverters.boxShadow\npropertyValueConverters.WebkitBoxShadow = propertyValueConverters.boxShadow\npropertyValueConverters.MozBoxShadow = propertyValueConverters.boxShadow\npropertyValueConverters.borderStyle = propertyValueConverters.borderColor\npropertyValueConverters.webkitTransform = propertyValueConverters.transform\npropertyValueConverters.mozTransform = propertyValueConverters.transform\npropertyValueConverters.WebkitTransform = propertyValueConverters.transform\npropertyValueConverters.MozTransform = propertyValueConverters.transform\npropertyValueConverters.transformOrigin =\n  propertyValueConverters.backgroundPosition\npropertyValueConverters.webkitTransformOrigin =\n  propertyValueConverters.transformOrigin\npropertyValueConverters.mozTransformOrigin =\n  propertyValueConverters.transformOrigin\npropertyValueConverters.WebkitTransformOrigin =\n  propertyValueConverters.transformOrigin\npropertyValueConverters.MozTransformOrigin =\n  propertyValueConverters.transformOrigin\n\n// kebab-case versions\n\npropertyValueConverters['text-shadow'] = propertyValueConverters.textShadow\npropertyValueConverters['border-color'] = propertyValueConverters.borderColor\npropertyValueConverters['border-radius'] = propertyValueConverters.borderRadius\npropertyValueConverters['background-image'] =\n  propertyValueConverters.backgroundImage\npropertyValueConverters['background-position'] =\n  propertyValueConverters.backgroundPosition\npropertyValueConverters['background-position-x'] =\n  propertyValueConverters.backgroundPositionX\npropertyValueConverters['border-width'] = propertyValueConverters.padding\npropertyValueConverters['box-shadow'] = propertyValueConverters.textShadow\npropertyValueConverters['-webkit-box-shadow'] =\n  propertyValueConverters.textShadow\npropertyValueConverters['-moz-box-shadow'] = propertyValueConverters.textShadow\npropertyValueConverters['border-style'] = propertyValueConverters.borderColor\npropertyValueConverters['-webkit-transform'] = propertyValueConverters.transform\npropertyValueConverters['-moz-transform'] = propertyValueConverters.transform\npropertyValueConverters['transform-origin'] =\n  propertyValueConverters.transformOrigin\npropertyValueConverters['-webkit-transform-origin'] =\n  propertyValueConverters.transformOrigin\npropertyValueConverters['-moz-transform-origin'] =\n  propertyValueConverters.transformOrigin\n\nexport default propertyValueConverters\n"],"names":["arrayToObject","array","reduce","obj","prop1","prop2","isBoolean","val","isNumber","isNullOrUndefined","isObject","isString","includes","inclusive","inclusee","indexOf","flipSign","value","parseFloat","slice","flipTransformSign","match","prefix","offset","suffix","calculateNewBackgroundPosition","idx","len","length","toFixed","getValuesAsList","replace","split","map","i","trim","filter","Boolean","item","list","state","openParansCount","closedParansCount","parensDepth","push","handleQuartetValues","splitValues","top","right","bottom","left","join","propertyValueConverters","padding","textShadow","negative","number","doubleNegative","borderColor","borderRadius","radius1","radius2","convertedRadius1","convertedRadius2","reverse","topLeft","topRight","bottomRight","bottomLeft","background","valuesToConvert","isRtl","bgImgDirectionRegex","bgPosDirectionRegex","backgroundPositionValue","backgroundPosition","backgroundImage","g1","group2","group","backgroundPositionX","transform","nonAsciiPattern","escapePattern","signedQuantPattern","translateXRegExp","RegExp","translateRegExp","translate3dRegExp","rotateRegExp","margin","borderWidth","boxShadow","webkitBoxShadow","mozBoxShadow","WebkitBoxShadow","MozBoxShadow","borderStyle","webkitTransform","mozTransform","WebkitTransform","MozTransform","transformOrigin","webkitTransformOrigin","mozTransformOrigin","WebkitTransformOrigin","MozTransformOrigin"],"mappings":"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"}